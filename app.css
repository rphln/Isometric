/*! Section: 3D */

*,
::before,
::after {
  transform-style: inherit;
  backface-visibility: inherit;

  image-rendering: inherit;
}

.n9-grid {
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

body {
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
}

/*! Section: Variables */

.n9-grid {
  --outline: var(--bs-dark);

  --tile-size: 8rem;

  --tile-height: var(--tile-size);
  --tile-width: var(--tile-size);

  /* This is arbitrary. */
  --tile-depth: calc(0.7071067812 * var(--tile-size));

  /* These are meant to be inverted. */
  --tile-elevation: calc(-0.4 * var(--tile-depth));
  --tile-depression: calc(+0.4 * var(--tile-depth));
}

.n9-grid.is-offset {
  --half-sqrt-3: 0.8660254037844386467637231707529361834714026269051903140279034897;

  --tile-offset: calc(var(--tile-width) * -0.5);
  --tile-height: calc(var(--half-sqrt-3) * var(--tile-size));
}

/*! Section: Layout */

.n9-grid {
  margin: 0 auto;
}

/*! Section: Grid */

.n9-grid .grid-row,
.n9-grid .grid-col {
  display: flex;
  position: relative;

  flex-grow: 0;
  flex-shrink: 0;

  top: 0;
  left: 0;
}

.n9-grid .grid-col {
  width: var(--tile-width);
  height: var(--tile-height);
}

/*! Section: Offset grids */

.n9-grid.is-offset .grid-row:nth-child(even) {
  margin-left: var(--tile-offset);
}

/*! Section: Remove seams */

.n9-grid .grid-col,
.n9-grid .grid-col::before,
.n9-grid .grid-col::after {
  margin-left: 1px;
  margin-top: 1px;

  outline: solid 1px var(--outline);
}

/*! Section: Elevation */

.n9-grid.is-cuboid .grid-col.is-lowered {
  top: var(--tile-depression);
  left: var(--tile-depression);
}

.n9-grid.is-cuboid .grid-col.is-raised {
  top: var(--tile-elevation);
  left: var(--tile-elevation);
}

/*! Section: Cuboid */

.n9-grid.is-cuboid .grid-col::before,
.n9-grid.is-cuboid .grid-col::after {
  content: "";

  display: block;
  position: absolute;
}

.n9-grid.is-cuboid .grid-col::before {
  width: var(--tile-depth);

  left: 100%;
  top: 0;
  bottom: 0;

  transform: skewY(45deg);
  transform-origin: top left;

  filter: brightness(80%);
}

.n9-grid.is-cuboid .grid-col::after {
  height: var(--tile-depth);

  top: 100%;
  left: 0;
  right: 0;

  transform: skew(45deg);
  transform-origin: top left;
}

/*! Section: Isometric */

.n9-grid.is-isometric {
  transform: rotateX(60deg) rotateZ(45deg);
}

.n9-grid.is-isometric .grid-col .is-2d {
  position: absolute;

  bottom: 50%;
  right: 50%;

  /**
   * The first `translate` places the element's bottom center exactly at the center of the tile.
   * The second translation (`translateY`) shifts the image back up to the middle of the tile.
   */
  transform: translate(50%, 50%) rotateZ(-45deg) rotateX(-60deg) translateY(-50%);

  /* Removes the blur produced by the transforms. Is this a placebo? */
  filter: blur(0);
}

/*! Section: Mouse */

.n9-grid .grid-col {
  cursor: pointer;
}

.n9-grid .grid-col::before,
.n9-grid .grid-col::after {
  pointer-events: none;
}

.n9-grid .grid-col:hover,
.n9-grid .grid-col:hover::before,
.n9-grid .grid-col:hover::after {
  /* We can't use `filter: brightness(90%);` here because of the 3D transformations. */
  box-shadow: rgba(var(--bs-dark-rgb), 0.3) inset 0 0 var(--tile-size) var(--tile-size);
}
